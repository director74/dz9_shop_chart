{{ if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: {{ $.Values.global.namespace }}
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: amqp
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: management
              containerPort: {{ .Values.service.managementPort }}
              protocol: TCP
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: "{{ $.Values.global.rabbitmq.auth.username }}"
            - name: RABBITMQ_DEFAULT_PASS
              value: "{{ $.Values.global.rabbitmq.auth.password }}"
            - name: RABBITMQ_LOOPBACK_USERS
              value: "none"
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            exec:
              command:
                - rabbitmq-diagnostics
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - rabbitmq-diagnostics
                - check_port_connectivity
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 3
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
          {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: rabbitmq-pvc
      {{- end }}
{{ end }}

{{- if and .Values.enabled .Values.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-pvc
  namespace: {{ $.Values.global.namespace }}
  labels:
    app: rabbitmq
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.persistence.size }}
{{- end }} 